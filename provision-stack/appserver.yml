- name: Common tool setup on all the servers
  hosts: appsrvgroup
  vars:
    timestamp: "{{ansible_date_time.date}}_{{ansible_date_time.hour}}_{{ansible_date_time.minute}}"
    tom_url: https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.37/bin/apache-tomcat-8.5.37.tar.gz

  tasks:
    - name: Install JDK on Ubuntu 14/15/16/18
      apt:
        name: openjdk-8-jdk
        state: present
        update_cache: yes
      when: ansible_distribution == 'Ubuntu' 

    - name: Download Tomcat Tar Ball/Binaries
      get_url:
        url: "{{tom_url}}"
        dest: /tmp/tomcat-8.tar.gz

    - name: Add tomcat group
      group:
        name: tomcat
        state: present

    - name: Add tomcat user
      user:
        name: tomcat
        group: tomcat
        shell: /bin/nologin
        home: /usr/local/tomcat8

    - file:
        path: /tmp/tomcat8
        state: directory

    - name: Extract tomcat
      unarchive:
        src: /tmp/tomcat-8.tar.gz
        dest: /tmp/tomcat8/
        remote_src: yes
        list_files: yes
      register: unarchive_info

    - debug:
        msg: "{{unarchive_info.files[0].split('/')[0]}}"

    - name: Synchronize /tmp/tomcat8/tomcat_cont /usr/local/tomcat8.
      synchronize:
        src: "/tmp/tomcat8/{{unarchive_info.files[0].split('/')[0]}}/"
        dest: /usr/local/tomcat8/
      delegate_to: "{{ inventory_hostname }}"

    - name: Change ownership of /usr/local/tomcat8
      file:
        path: /usr/local/tomcat8
        owner: tomcat
        group: tomcat
        recurse: yes
    

    - name: Setup tomcat SVC file on ubuntu 14/15
      template:
         src: templates/ubuntu14_15-svcfile.j2
         dest: /etc/init.d/tomcat
         mode: "a+x"
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version < '16'

    - name: Setup tomcat SVC file on ubuntu 16 and 18
      template:
         src: templates/ubuntu16-svcfile.j2
         dest: /etc/systemd/system/tomcat.service
         mode: "a+x"
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version >= '16'

    - name: Reload tomcat svc config in ubuntu 14/15
      command: update-rc.d tomcat defaults
      when: ansible_distribution == 'Ubuntu' and ansible_distribution_major_version < '16'


    - name: just force systemd to reread configs (2.4 and above)
      systemd:
        daemon_reload: yes 
      when: ansible_distribution_major_version > '6' or ansible_distribution_major_version > '15'

    - name: Start & Enable TOmcat 8
      service:
        name: tomcat
        state: started
        enabled: yes
    
    - name: Collect info od existing artifact
      ansible.builtin.stat:
        path: /usr/local/tomcat8/webapps/ROOT
      register: artifact_stat
      tags:
        - deploy
    
    - name: Stop the tomcat service
      ansible.builtin.service:
        name: tomcat8
        state: stopped
      tags:
        - deploy
    
    - name: Try backup and deploy
      block:
        - name: Archive ROOT dir with timestamp
          ansible.builtin.archive:
            path: /usr/local/tomcat8/webapps/ROOT
            dest: "/opt/ROOT_{{timestamp}}.tgz"
          when: artifact_stat.stat.exists
          register: archive_info
          tags:
            - deploy
    
        - name: copy ROOT dir with _ROOT name
          ansible.builtin.shell: cp -r ROOT old_ROOT
          args:
            chdir: /usr/local/tomcat8/webapps

        - name: Delete curent artifact
          ansible.builtin.file:
            path: "{{item}}"
            state: absent
          when: archive_info.changed
          loop:
            - /usr/local/tomcat8/webapps/ROOT
            - /usr/local/tomcat8/webapps/ROOT.war
          tags:
            - deploy

        - name: Try deplay the artifact else restore from previous old_ROOT
          block:
            - name: Deploy vprofile artifact
              ansible.builtin.copy:
                src: files/ROOT.war
                dest: /usr/local/tomcat8/webapps/ROOT.war
              register: deploy_info
              tags:
                - deploy
          rescue:
            - ansible.builtin.shell: cp -r old_ROOT ROOT
              args: 
                chdir: /usr/local/tomcat8/webapps/

      rescue:
        - name: Start tomcat8 svc
          ansible.builtin.service:
            name: tomcat8
            state: started
          when: deploy_info.changed
          tags:
            - deploy
    - name: Wait until ROOT.war is extracted to ROOT dir
      ansible.builtin.wait_for:
        path: /usr/local/tomcat8/webapps/ROOT
      tags:
        - deploy
    
    - name: Deploy web configurations file
      ansible.builtin.template:
        src: templates/application.j2
        dest: /usr/local/tomcat8/webapps/ROOT/WEB-INF/classes/application.properties
        force: yes
      notify:
        - Restart tomcat
      tags:
        - deploy


  handlers:
    - name: Restart tomcat
      ansible.builtin.service:
        name: tomcat8
        state: restarted


   