#SPDX-License-Identifier: MIT-0
---
# tasks file for aws-vpc
- name: Create vprofile vpc
  amazon.aws.ec2_vpc_net:
    name: "{{vpc_name}}"
    cidr_block: "{{vpcCidr}}"
    region: "{{region}}"
    dns_support: yes
    dns_hostnames: yes
    tenancy: default
    state: "{{state}}"
  register: vpcout
  
- name: create 3 public subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{vpcout.vpc.id}}"
    az: "{{zones[item.zone]}}"
    cidr: "{{item.cidr}}"
    state: "{{state}}"
    map_public: true
    resource_tags: {
      Name: "{{item.name}}"
    }
  loop: "{{public_subs}}"
  register: pubsub_out

- name: create 3 private subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{vpcout.vpc.id}}"
    az: "{{zones[item.zone]}}"
    cidr: "{{item.cidr}}"
    state: "{{state}}"
    resource_tags: {
      Name: "{{item.name}}"
    }
  loop: "{{private_subs}}"
  register: privsub_out

- name: Set fact with list of subnet id's
  ansible.builtin.set_fact:
    pub_subnet_ids: "{{ pubsub_out.results | map(attribute='subnet.id') | list }}"
    priv_subnet_ids: "{{ privsub_out.results | map(attribute='subnet.id') | list }}"
    cacheable: yes

- name: Create Internet gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{vpcout.vpc.id}}"
    state: "{{state}}"
    resource_tags: {
      Name: "vprofile-IG"
    }
  register: igw_out

- name: Set up public subnet route table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{vpcout.vpc.id}}"
    tags:
      Name: vpro-public-RT
    subnets: "{{ pub_subnet_ids }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw_out.gateway_id }}"
  register: public_rt_out

- name: Create new nat gateway, using an EIP address  and wait for available status.
  amazon.aws.ec2_vpc_nat_gateway:
    state: "{{state}}"
    subnet_id: "{{pub_subnet_ids[0]}}"
    wait: true
    if_exist_do_not_create: true
  register: NATGW_out
  when: pub_subnet_ids | length > 0
  
- name: Set up private subnet route table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{vpcout.vpc.id}}"
    tags:
      Name: vpro-private-RT
    subnets: "{{ priv_subnet_ids }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ NATGW_out.nat_gateway_id }}"
  register: private_rt_out

- name: Set required out to fact
  set_fact:
    vpc_id: "{{vpcout.vpc.id}}"
    igw_id:  "{{ igw_out.gateway_id }}"
    natgw_id: "{{ NATGW_out.nat_gateway_id }}"
    pubrt_id: "{{public_rt_out.route_table.id}}"
    privrt_id: "{{private_rt_out.route_table.id}}"
    cacheable: yes 